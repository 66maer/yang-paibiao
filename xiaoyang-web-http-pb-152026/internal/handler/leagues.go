// Code generated by https://github.com/zhufuyi/sponge

package handler

import (
	"context"

	//"github.com/zhufuyi/sponge/pkg/gin/middleware"

	xiaoyangV1 "xiaoyang/api/xiaoyang/v1"
)

var _ xiaoyangV1.LeaguesServiceLogicer = (*leaguesServiceHandler)(nil)

type leaguesServiceHandler struct {
	// example:
	// 	leaguesServiceDao dao.LeaguesServiceDao
}

// NewLeaguesServiceHandler create a handler
func NewLeaguesServiceHandler() xiaoyangV1.LeaguesServiceLogicer {
	return &leaguesServiceHandler{
		// example:
		// 	leaguesServiceDao: dao.NewLeaguesServiceDao(
		// 		model.GetDB(),
		// 		cache.NewLeaguesServiceCache(model.GetCacheType()),
		// 	),
	}
}

// CreateLeague 创建组织
func (h *leaguesServiceHandler) CreateLeague(ctx context.Context, req *xiaoyangV1.CreateLeagueRequest) (*xiaoyangV1.CreateLeagueResponse, error) {
	panic("implement me")

	// fill in the business logic code here
	// example:
	//	    err := req.Validate()
	//	    if err != nil {
	//		    logger.Warn("req.Validate error", logger.Err(err), logger.Any("req", req), middleware.CtxRequestIDField(ctx))
	//		    return nil, ecode.InvalidParams.Err()
	//	    }
	//
	// 	reply, err := h.leaguesServiceDao.CreateLeague(ctx, &model.LeaguesService{
	//     	UserId: req.UserId,
	//     	QqNumber: req.QqNumber,
	//     	GroupNumber: req.GroupNumber,
	//     	Ukey: req.Ukey,
	//     	Name: req.Name,
	//     	Server: req.Server,
	//     	Avatar: req.Avatar,
	//     	ExpiredAt: req.ExpiredAt,
	//     	Preferences: req.Preferences,
	//     })
	// 	if err != nil {
	//			logger.Warn("CreateLeague error", logger.Err(err), middleware.CtxRequestIDField(ctx))
	//			return nil, ecode.InternalServerError.Err()
	//		}
	//
	//     return &xiaoyangV1.CreateLeagueResponse{
	//     	Id: reply.Id,
	//     }, nil
}

// ListLeagues 获取组织列表
func (h *leaguesServiceHandler) ListLeagues(ctx context.Context, req *xiaoyangV1.ListLeaguesRequest) (*xiaoyangV1.ListLeaguesResponse, error) {
	panic("implement me")

	// fill in the business logic code here
	// example:
	//	    err := req.Validate()
	//	    if err != nil {
	//		    logger.Warn("req.Validate error", logger.Err(err), logger.Any("req", req), middleware.CtxRequestIDField(ctx))
	//		    return nil, ecode.InvalidParams.Err()
	//	    }
	//
	// 	reply, err := h.leaguesServiceDao.ListLeagues(ctx, &model.LeaguesService{
	//     	UserId: req.UserId,
	//     	QqNumber: req.QqNumber,
	//     })
	// 	if err != nil {
	//			logger.Warn("ListLeagues error", logger.Err(err), middleware.CtxRequestIDField(ctx))
	//			return nil, ecode.InternalServerError.Err()
	//		}
	//
	//     return &xiaoyangV1.ListLeaguesResponse{
	//     	Leagues: reply.Leagues,
	//     }, nil
}

// GetLeague 获取组织详情
func (h *leaguesServiceHandler) GetLeague(ctx context.Context, req *xiaoyangV1.GetLeagueRequest) (*xiaoyangV1.GetLeagueResponse, error) {
	panic("implement me")

	// fill in the business logic code here
	// example:
	//	    err := req.Validate()
	//	    if err != nil {
	//		    logger.Warn("req.Validate error", logger.Err(err), logger.Any("req", req), middleware.CtxRequestIDField(ctx))
	//		    return nil, ecode.InvalidParams.Err()
	//	    }
	//
	// 	reply, err := h.leaguesServiceDao.GetLeague(ctx, &model.LeaguesService{
	//     	Id: req.Id,
	//     	Ukey: req.Ukey,
	//     })
	// 	if err != nil {
	//			logger.Warn("GetLeague error", logger.Err(err), middleware.CtxRequestIDField(ctx))
	//			return nil, ecode.InternalServerError.Err()
	//		}
	//
	//     return &xiaoyangV1.GetLeagueResponse{
	//     	Id: reply.Id,
	//     	GroupNumber: reply.GroupNumber,
	//     	Ukey: reply.Ukey,
	//     	Name: reply.Name,
	//     	Server: reply.Server,
	//     	Avatar: reply.Avatar,
	//     	ExpiredAt: reply.ExpiredAt,
	//     	Preferences: reply.Preferences,
	//     }, nil
}

// UpdateLeague 更新组织设置
func (h *leaguesServiceHandler) UpdateLeague(ctx context.Context, req *xiaoyangV1.UpdateLeagueRequest) (*xiaoyangV1.UpdateLeagueResponse, error) {
	panic("implement me")

	// fill in the business logic code here
	// example:
	//	    err := req.Validate()
	//	    if err != nil {
	//		    logger.Warn("req.Validate error", logger.Err(err), logger.Any("req", req), middleware.CtxRequestIDField(ctx))
	//		    return nil, ecode.InvalidParams.Err()
	//	    }
	//
	// 	reply, err := h.leaguesServiceDao.UpdateLeague(ctx, &model.LeaguesService{
	//     	Id: req.Id,
	//     	GroupNumber: req.GroupNumber,
	//     	Ukey: req.Ukey,
	//     	Name: req.Name,
	//     	Server: req.Server,
	//     	Avatar: req.Avatar,
	//     	Preferences: req.Preferences,
	//     })
	// 	if err != nil {
	//			logger.Warn("UpdateLeague error", logger.Err(err), middleware.CtxRequestIDField(ctx))
	//			return nil, ecode.InternalServerError.Err()
	//		}
	//
	//     return &xiaoyangV1.UpdateLeagueResponse{
	//     }, nil
}

// UpdateLeagueExpiredAt 更新组织过期时间
func (h *leaguesServiceHandler) UpdateLeagueExpiredAt(ctx context.Context, req *xiaoyangV1.UpdateLeagueExpiredAtRequest) (*xiaoyangV1.UpdateLeagueExpiredAtResponse, error) {
	panic("implement me")

	// fill in the business logic code here
	// example:
	//	    err := req.Validate()
	//	    if err != nil {
	//		    logger.Warn("req.Validate error", logger.Err(err), logger.Any("req", req), middleware.CtxRequestIDField(ctx))
	//		    return nil, ecode.InvalidParams.Err()
	//	    }
	//
	// 	reply, err := h.leaguesServiceDao.UpdateLeagueExpiredAt(ctx, &model.LeaguesService{
	//     	Id: req.Id,
	//     	Ukey: req.Ukey,
	//     	ExpiredAt: req.ExpiredAt,
	//     })
	// 	if err != nil {
	//			logger.Warn("UpdateLeagueExpiredAt error", logger.Err(err), middleware.CtxRequestIDField(ctx))
	//			return nil, ecode.InternalServerError.Err()
	//		}
	//
	//     return &xiaoyangV1.UpdateLeagueExpiredAtResponse{
	//     }, nil
}

// JoinLeague 将用户加入组织
func (h *leaguesServiceHandler) JoinLeague(ctx context.Context, req *xiaoyangV1.JoinLeagueRequest) (*xiaoyangV1.JoinLeagueResponse, error) {
	panic("implement me")

	// fill in the business logic code here
	// example:
	//	    err := req.Validate()
	//	    if err != nil {
	//		    logger.Warn("req.Validate error", logger.Err(err), logger.Any("req", req), middleware.CtxRequestIDField(ctx))
	//		    return nil, ecode.InvalidParams.Err()
	//	    }
	//
	// 	reply, err := h.leaguesServiceDao.JoinLeague(ctx, &model.LeaguesService{
	//     	UserId: req.UserId,
	//     	QqNumber: req.QqNumber,
	//     	GroupNumber: req.GroupNumber,
	//     	GroupId: req.GroupId,
	//     	Ukey: req.Ukey,
	//     	Role: req.Role,
	//     	GroupNickname: req.GroupNickname,
	//     })
	// 	if err != nil {
	//			logger.Warn("JoinLeague error", logger.Err(err), middleware.CtxRequestIDField(ctx))
	//			return nil, ecode.InternalServerError.Err()
	//		}
	//
	//     return &xiaoyangV1.JoinLeagueResponse{
	//     }, nil
}

// SetUserRole 设定用户在组织中的角色
func (h *leaguesServiceHandler) SetUserRole(ctx context.Context, req *xiaoyangV1.SetUserRoleRequest) (*xiaoyangV1.SetUserRoleResponse, error) {
	panic("implement me")

	// fill in the business logic code here
	// example:
	//	    err := req.Validate()
	//	    if err != nil {
	//		    logger.Warn("req.Validate error", logger.Err(err), logger.Any("req", req), middleware.CtxRequestIDField(ctx))
	//		    return nil, ecode.InvalidParams.Err()
	//	    }
	//
	// 	reply, err := h.leaguesServiceDao.SetUserRole(ctx, &model.LeaguesService{
	//     	UserId: req.UserId,
	//     	QqNumber: req.QqNumber,
	//     	GroupId: req.GroupId,
	//     	Ukey: req.Ukey,
	//     	Role: req.Role,
	//     })
	// 	if err != nil {
	//			logger.Warn("SetUserRole error", logger.Err(err), middleware.CtxRequestIDField(ctx))
	//			return nil, ecode.InternalServerError.Err()
	//		}
	//
	//     return &xiaoyangV1.SetUserRoleResponse{
	//     }, nil
}

// SetUserNickname 修改用户在组织中的昵称
func (h *leaguesServiceHandler) SetUserNickname(ctx context.Context, req *xiaoyangV1.SetUserNicknameRequest) (*xiaoyangV1.SetUserNicknameResponse, error) {
	panic("implement me")

	// fill in the business logic code here
	// example:
	//	    err := req.Validate()
	//	    if err != nil {
	//		    logger.Warn("req.Validate error", logger.Err(err), logger.Any("req", req), middleware.CtxRequestIDField(ctx))
	//		    return nil, ecode.InvalidParams.Err()
	//	    }
	//
	// 	reply, err := h.leaguesServiceDao.SetUserNickname(ctx, &model.LeaguesService{
	//     	UserId: req.UserId,
	//     	QqNumber: req.QqNumber,
	//     	GroupId: req.GroupId,
	//     	Ukey: req.Ukey,
	//     	Nickname: req.Nickname,
	//     })
	// 	if err != nil {
	//			logger.Warn("SetUserNickname error", logger.Err(err), middleware.CtxRequestIDField(ctx))
	//			return nil, ecode.InternalServerError.Err()
	//		}
	//
	//     return &xiaoyangV1.SetUserNicknameResponse{
	//     }, nil
}

// ListLeagueMembers 获取组织成员列表
func (h *leaguesServiceHandler) ListLeagueMembers(ctx context.Context, req *xiaoyangV1.ListLeagueMembersRequest) (*xiaoyangV1.ListLeagueMembersResponse, error) {
	panic("implement me")

	// fill in the business logic code here
	// example:
	//	    err := req.Validate()
	//	    if err != nil {
	//		    logger.Warn("req.Validate error", logger.Err(err), logger.Any("req", req), middleware.CtxRequestIDField(ctx))
	//		    return nil, ecode.InvalidParams.Err()
	//	    }
	//
	// 	reply, err := h.leaguesServiceDao.ListLeagueMembers(ctx, &model.LeaguesService{
	//     	GroupId: req.GroupId,
	//     	Ukey: req.Ukey,
	//     })
	// 	if err != nil {
	//			logger.Warn("ListLeagueMembers error", logger.Err(err), middleware.CtxRequestIDField(ctx))
	//			return nil, ecode.InternalServerError.Err()
	//		}
	//
	//     return &xiaoyangV1.ListLeagueMembersResponse{
	//     	Members: reply.Members,
	//     }, nil
}
