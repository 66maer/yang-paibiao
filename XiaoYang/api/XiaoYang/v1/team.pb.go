// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: api/XiaoYang/v1/team.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建开团请求
type CreateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId      uint64 `protobuf:"varint,1,opt,name=guildId,proto3" json:"guildId"`
	CreaterId    uint64 `protobuf:"varint,2,opt,name=createrId,proto3" json:"createrId"`
	Title        string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	Dungeons     string `protobuf:"bytes,4,opt,name=dungeons,proto3" json:"dungeons"`
	BookXuanjing bool   `protobuf:"varint,5,opt,name=bookXuanjing,proto3" json:"bookXuanjing"`
	BookYuntie   bool   `protobuf:"varint,6,opt,name=bookYuntie,proto3" json:"bookYuntie"`
	IsVisible    bool   `protobuf:"varint,7,opt,name=isVisible,proto3" json:"isVisible"`
	IsLock       bool   `protobuf:"varint,8,opt,name=isLock,proto3" json:"isLock"`
	Rule         string `protobuf:"bytes,9,opt,name=rule,proto3" json:"rule"`
	Notice       string `protobuf:"bytes,10,opt,name=notice,proto3" json:"notice"`
	TeamTime     string `protobuf:"bytes,11,opt,name=teamTime,proto3" json:"teamTime"` // ISO8601 格式
}

func (x *CreateTeamRequest) Reset() {
	*x = CreateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamRequest) ProtoMessage() {}

func (x *CreateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTeamRequest) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *CreateTeamRequest) GetCreaterId() uint64 {
	if x != nil {
		return x.CreaterId
	}
	return 0
}

func (x *CreateTeamRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTeamRequest) GetDungeons() string {
	if x != nil {
		return x.Dungeons
	}
	return ""
}

func (x *CreateTeamRequest) GetBookXuanjing() bool {
	if x != nil {
		return x.BookXuanjing
	}
	return false
}

func (x *CreateTeamRequest) GetBookYuntie() bool {
	if x != nil {
		return x.BookYuntie
	}
	return false
}

func (x *CreateTeamRequest) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

func (x *CreateTeamRequest) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

func (x *CreateTeamRequest) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *CreateTeamRequest) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *CreateTeamRequest) GetTeamTime() string {
	if x != nil {
		return x.TeamTime
	}
	return ""
}

// 创建开团响应
type CreateTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId uint64 `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId"`
}

func (x *CreateTeamResponse) Reset() {
	*x = CreateTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamResponse) ProtoMessage() {}

func (x *CreateTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamResponse.ProtoReflect.Descriptor instead.
func (*CreateTeamResponse) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTeamResponse) GetTeamId() uint64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

// 关闭团队请求
type CloseTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId  uint64 `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId"`
	CloseId uint64 `protobuf:"varint,2,opt,name=closeId,proto3" json:"closeId"`
}

func (x *CloseTeamRequest) Reset() {
	*x = CloseTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTeamRequest) ProtoMessage() {}

func (x *CloseTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTeamRequest.ProtoReflect.Descriptor instead.
func (*CloseTeamRequest) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{2}
}

func (x *CloseTeamRequest) GetTeamId() uint64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *CloseTeamRequest) GetCloseId() uint64 {
	if x != nil {
		return x.CloseId
	}
	return 0
}

// 关闭团队响应
type CloseTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
}

func (x *CloseTeamResponse) Reset() {
	*x = CloseTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTeamResponse) ProtoMessage() {}

func (x *CloseTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTeamResponse.ProtoReflect.Descriptor instead.
func (*CloseTeamResponse) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{3}
}

func (x *CloseTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 修改开团信息请求
type UpdateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId       uint64 `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Dungeons     string `protobuf:"bytes,3,opt,name=dungeons,proto3" json:"dungeons"`
	BookXuanjing bool   `protobuf:"varint,4,opt,name=bookXuanjing,proto3" json:"bookXuanjing"`
	BookYuntie   bool   `protobuf:"varint,5,opt,name=bookYuntie,proto3" json:"bookYuntie"`
	IsVisible    bool   `protobuf:"varint,6,opt,name=isVisible,proto3" json:"isVisible"`
	IsLock       bool   `protobuf:"varint,7,opt,name=isLock,proto3" json:"isLock"`
	Rule         string `protobuf:"bytes,8,opt,name=rule,proto3" json:"rule"`
	Notice       string `protobuf:"bytes,9,opt,name=notice,proto3" json:"notice"`
	TeamTime     string `protobuf:"bytes,10,opt,name=teamTime,proto3" json:"teamTime"` // ISO8601 格式
}

func (x *UpdateTeamRequest) Reset() {
	*x = UpdateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamRequest) ProtoMessage() {}

func (x *UpdateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamRequest) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTeamRequest) GetTeamId() uint64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *UpdateTeamRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTeamRequest) GetDungeons() string {
	if x != nil {
		return x.Dungeons
	}
	return ""
}

func (x *UpdateTeamRequest) GetBookXuanjing() bool {
	if x != nil {
		return x.BookXuanjing
	}
	return false
}

func (x *UpdateTeamRequest) GetBookYuntie() bool {
	if x != nil {
		return x.BookYuntie
	}
	return false
}

func (x *UpdateTeamRequest) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

func (x *UpdateTeamRequest) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

func (x *UpdateTeamRequest) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *UpdateTeamRequest) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *UpdateTeamRequest) GetTeamTime() string {
	if x != nil {
		return x.TeamTime
	}
	return ""
}

// 修改开团信息响应
type UpdateTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
}

func (x *UpdateTeamResponse) Reset() {
	*x = UpdateTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamResponse) ProtoMessage() {}

func (x *UpdateTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamResponse.ProtoReflect.Descriptor instead.
func (*UpdateTeamResponse) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 新增模板请求
type CreateTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId   uint64 `protobuf:"varint,1,opt,name=guildId,proto3" json:"guildId"`
	CreaterId uint64 `protobuf:"varint,2,opt,name=createrId,proto3" json:"createrId"`
	Title     string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	Rule      string `protobuf:"bytes,4,opt,name=rule,proto3" json:"rule"`
	Notice    string `protobuf:"bytes,5,opt,name=notice,proto3" json:"notice"`
}

func (x *CreateTemplateRequest) Reset() {
	*x = CreateTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateRequest) ProtoMessage() {}

func (x *CreateTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTemplateRequest) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *CreateTemplateRequest) GetCreaterId() uint64 {
	if x != nil {
		return x.CreaterId
	}
	return 0
}

func (x *CreateTemplateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTemplateRequest) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *CreateTemplateRequest) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

// 新增模板响应
type CreateTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId uint64 `protobuf:"varint,1,opt,name=templateId,proto3" json:"templateId"`
}

func (x *CreateTemplateResponse) Reset() {
	*x = CreateTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateResponse) ProtoMessage() {}

func (x *CreateTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTemplateResponse) GetTemplateId() uint64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

// 删除模板请求
type DeleteTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId uint64 `protobuf:"varint,1,opt,name=templateId,proto3" json:"templateId"`
}

func (x *DeleteTemplateRequest) Reset() {
	*x = DeleteTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateRequest) ProtoMessage() {}

func (x *DeleteTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTemplateRequest) GetTemplateId() uint64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

// 删除模板响应
type DeleteTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
}

func (x *DeleteTemplateResponse) Reset() {
	*x = DeleteTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemplateResponse) ProtoMessage() {}

func (x *DeleteTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteTemplateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 修改模板请求
type UpdateTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId uint64 `protobuf:"varint,1,opt,name=templateId,proto3" json:"templateId"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Rule       string `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule"`
	Notice     string `protobuf:"bytes,4,opt,name=notice,proto3" json:"notice"`
}

func (x *UpdateTemplateRequest) Reset() {
	*x = UpdateTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateRequest) ProtoMessage() {}

func (x *UpdateTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTemplateRequest) GetTemplateId() uint64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *UpdateTemplateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTemplateRequest) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *UpdateTemplateRequest) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

// 修改模板响应
type UpdateTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
}

func (x *UpdateTemplateResponse) Reset() {
	*x = UpdateTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateResponse) ProtoMessage() {}

func (x *UpdateTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTemplateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 查找开团请求
type GetTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId uint64 `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId"`
}

func (x *GetTeamRequest) Reset() {
	*x = GetTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamRequest) ProtoMessage() {}

func (x *GetTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamRequest.ProtoReflect.Descriptor instead.
func (*GetTeamRequest) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{12}
}

func (x *GetTeamRequest) GetTeamId() uint64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

// 查找开团响应
type GetTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamInfo *TeamInfo `protobuf:"bytes,1,opt,name=teamInfo,proto3" json:"teamInfo"`
}

func (x *GetTeamResponse) Reset() {
	*x = GetTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamResponse) ProtoMessage() {}

func (x *GetTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamResponse.ProtoReflect.Descriptor instead.
func (*GetTeamResponse) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{13}
}

func (x *GetTeamResponse) GetTeamInfo() *TeamInfo {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

// 批量查找开团请求
type ListTeamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId  uint64 `protobuf:"varint,1,opt,name=guildId,proto3" json:"guildId"`
	Filter   string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter"`
	Page     int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page"`
	PageSize int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *ListTeamsRequest) Reset() {
	*x = ListTeamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamsRequest) ProtoMessage() {}

func (x *ListTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamsRequest.ProtoReflect.Descriptor instead.
func (*ListTeamsRequest) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{14}
}

func (x *ListTeamsRequest) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *ListTeamsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListTeamsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTeamsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 批量查找开团响应
type ListTeamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teams []*TeamInfo `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams"`
}

func (x *ListTeamsResponse) Reset() {
	*x = ListTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamsResponse) ProtoMessage() {}

func (x *ListTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamsResponse.ProtoReflect.Descriptor instead.
func (*ListTeamsResponse) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{15}
}

func (x *ListTeamsResponse) GetTeams() []*TeamInfo {
	if x != nil {
		return x.Teams
	}
	return nil
}

// 查找模板请求
type GetTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId uint64 `protobuf:"varint,1,opt,name=templateId,proto3" json:"templateId"`
}

func (x *GetTemplateRequest) Reset() {
	*x = GetTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateRequest) ProtoMessage() {}

func (x *GetTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{16}
}

func (x *GetTemplateRequest) GetTemplateId() uint64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

// 查找模板响应
type GetTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateInfo *TemplateInfo `protobuf:"bytes,1,opt,name=templateInfo,proto3" json:"templateInfo"`
}

func (x *GetTemplateResponse) Reset() {
	*x = GetTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateResponse) ProtoMessage() {}

func (x *GetTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{17}
}

func (x *GetTemplateResponse) GetTemplateInfo() *TemplateInfo {
	if x != nil {
		return x.TemplateInfo
	}
	return nil
}

// 批量查找模板请求
type ListTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId uint64 `protobuf:"varint,1,opt,name=guildId,proto3" json:"guildId"`
}

func (x *ListTemplatesRequest) Reset() {
	*x = ListTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplatesRequest) ProtoMessage() {}

func (x *ListTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{18}
}

func (x *ListTemplatesRequest) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

// 批量查找模板响应
type ListTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Templates []*TemplateInfo `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates"`
}

func (x *ListTemplatesResponse) Reset() {
	*x = ListTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplatesResponse) ProtoMessage() {}

func (x *ListTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{19}
}

func (x *ListTemplatesResponse) GetTemplates() []*TemplateInfo {
	if x != nil {
		return x.Templates
	}
	return nil
}

// 开团信息
type TeamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId          uint64 `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId"`
	GuildId         uint64 `protobuf:"varint,2,opt,name=guildId,proto3" json:"guildId"`
	CreaterId       uint64 `protobuf:"varint,3,opt,name=createrId,proto3" json:"createrId"`
	Title           string `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	Dungeons        string `protobuf:"bytes,5,opt,name=dungeons,proto3" json:"dungeons"`
	BookXuanjing    bool   `protobuf:"varint,6,opt,name=bookXuanjing,proto3" json:"bookXuanjing"`
	BookYuntie      bool   `protobuf:"varint,7,opt,name=bookYuntie,proto3" json:"bookYuntie"`
	IsVisible       bool   `protobuf:"varint,8,opt,name=isVisible,proto3" json:"isVisible"`
	IsLock          bool   `protobuf:"varint,9,opt,name=isLock,proto3" json:"isLock"`
	Rule            string `protobuf:"bytes,10,opt,name=rule,proto3" json:"rule"`
	Notice          string `protobuf:"bytes,11,opt,name=notice,proto3" json:"notice"`
	Summary         string `protobuf:"bytes,12,opt,name=summary,proto3" json:"summary"`       // 团队总结
	TeamTime        string `protobuf:"bytes,13,opt,name=teamTime,proto3" json:"teamTime"`     // ISO8601 格式
	CreateTime      string `protobuf:"bytes,14,opt,name=createTime,proto3" json:"createTime"` // ISO8601 格式
	UpdateTime      string `protobuf:"bytes,15,opt,name=updateTime,proto3" json:"updateTime"` // ISO8601 格式
	CloseTime       string `protobuf:"bytes,16,opt,name=closeTime,proto3" json:"closeTime"`   // ISO8601 格式
	CloseId         uint64 `protobuf:"varint,17,opt,name=closeId,proto3" json:"closeId"`
	CreaterNickname string `protobuf:"bytes,18,opt,name=createrNickname,proto3" json:"createrNickname"`
	CloseNickname   string `protobuf:"bytes,19,opt,name=closeNickname,proto3" json:"closeNickname"`
}

func (x *TeamInfo) Reset() {
	*x = TeamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamInfo) ProtoMessage() {}

func (x *TeamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamInfo.ProtoReflect.Descriptor instead.
func (*TeamInfo) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{20}
}

func (x *TeamInfo) GetTeamId() uint64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *TeamInfo) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *TeamInfo) GetCreaterId() uint64 {
	if x != nil {
		return x.CreaterId
	}
	return 0
}

func (x *TeamInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TeamInfo) GetDungeons() string {
	if x != nil {
		return x.Dungeons
	}
	return ""
}

func (x *TeamInfo) GetBookXuanjing() bool {
	if x != nil {
		return x.BookXuanjing
	}
	return false
}

func (x *TeamInfo) GetBookYuntie() bool {
	if x != nil {
		return x.BookYuntie
	}
	return false
}

func (x *TeamInfo) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

func (x *TeamInfo) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

func (x *TeamInfo) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *TeamInfo) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *TeamInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *TeamInfo) GetTeamTime() string {
	if x != nil {
		return x.TeamTime
	}
	return ""
}

func (x *TeamInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *TeamInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *TeamInfo) GetCloseTime() string {
	if x != nil {
		return x.CloseTime
	}
	return ""
}

func (x *TeamInfo) GetCloseId() uint64 {
	if x != nil {
		return x.CloseId
	}
	return 0
}

func (x *TeamInfo) GetCreaterNickname() string {
	if x != nil {
		return x.CreaterNickname
	}
	return ""
}

func (x *TeamInfo) GetCloseNickname() string {
	if x != nil {
		return x.CloseNickname
	}
	return ""
}

// 模板信息
type TemplateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId uint64 `protobuf:"varint,1,opt,name=templateId,proto3" json:"templateId"`
	GuildId    uint64 `protobuf:"varint,2,opt,name=guildId,proto3" json:"guildId"`
	CreaterId  uint64 `protobuf:"varint,3,opt,name=createrId,proto3" json:"createrId"`
	Title      string `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	Rule       string `protobuf:"bytes,5,opt,name=rule,proto3" json:"rule"`
	Notice     string `protobuf:"bytes,6,opt,name=notice,proto3" json:"notice"`
	CreateTime string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime"` // ISO8601 格式
	UpdateTime string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime"` // ISO8601 格式
}

func (x *TemplateInfo) Reset() {
	*x = TemplateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_XiaoYang_v1_team_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateInfo) ProtoMessage() {}

func (x *TemplateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_XiaoYang_v1_team_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateInfo.ProtoReflect.Descriptor instead.
func (*TemplateInfo) Descriptor() ([]byte, []int) {
	return file_api_XiaoYang_v1_team_proto_rawDescGZIP(), []int{21}
}

func (x *TemplateInfo) GetTemplateId() uint64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *TemplateInfo) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *TemplateInfo) GetCreaterId() uint64 {
	if x != nil {
		return x.CreaterId
	}
	return 0
}

func (x *TemplateInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TemplateInfo) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *TemplateInfo) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *TemplateInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *TemplateInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

var File_api_XiaoYang_v1_team_proto protoreflect.FileDescriptor

var file_api_XiaoYang_v1_team_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x70,
	0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x02, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f,
	0x6b, 0x58, 0x75, 0x61, 0x6e, 0x6a, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x58, 0x75, 0x61, 0x6e, 0x6a, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x59, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x59, 0x75, 0x6e, 0x74, 0x69, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x10, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x22,
	0x2d, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x9f,
	0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x58, 0x75, 0x61, 0x6e, 0x6a, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x58, 0x75, 0x61, 0x6e, 0x6a, 0x69,
	0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x59, 0x75, 0x6e, 0x74, 0x69, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x59, 0x75, 0x6e, 0x74,
	0x69, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x2e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x91, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x22, 0x38, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x37,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x79, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x32, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x74,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x44, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x65, 0x61,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58,
	0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x34, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x22, 0x58, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58,
	0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x22, 0xb0, 0x04, 0x0a, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x58, 0x75, 0x61, 0x6e, 0x6a, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x58, 0x75, 0x61,
	0x6e, 0x6a, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x59, 0x75, 0x6e,
	0x74, 0x69, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x59,
	0x75, 0x6e, 0x74, 0x69, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x75, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe8, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x32, 0xd8, 0x0f, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xaa, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x92, 0x41, 0x2e, 0x12, 0x06, 0xe5,
	0xbc, 0x80, 0xe5, 0x9b, 0xa2, 0x1a, 0x12, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x96, 0xb0,
	0xe7, 0x9a, 0x84, 0xe5, 0xbc, 0x80, 0xe5, 0x9b, 0xa2, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65,
	0x61, 0x6d, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0xaf, 0x01,
	0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x5b, 0x92, 0x41, 0x37, 0x12, 0x0c, 0xe5, 0x85, 0xb3, 0xe9, 0x97, 0xad, 0xe5,
	0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0x1a, 0x15, 0xe5, 0x85, 0xb3, 0xe9, 0x97, 0xad, 0xe6, 0x8c, 0x87,
	0xe5, 0xae, 0x9a, 0xe7, 0x9a, 0x84, 0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0x62, 0x10, 0x0a, 0x0e,
	0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12,
	0xbf, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x92, 0x41, 0x43, 0x12, 0x12, 0xe4, 0xbf,
	0xae, 0xe6, 0x94, 0xb9, 0xe5, 0xbc, 0x80, 0xe5, 0x9b, 0xa2, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf,
	0x1a, 0x1b, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe5, 0xbc, 0x80, 0xe5, 0x9b, 0xa2, 0xe7, 0x9a,
	0x84, 0xe5, 0x9f, 0xba, 0xe6, 0x9c, 0xac, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x62, 0x10, 0x0a,
	0x0e, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x12, 0xca, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59,
	0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x92, 0x41, 0x3a, 0x12, 0x0c, 0xe6, 0x96, 0xb0, 0xe5,
	0xa2, 0x9e, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x1a, 0x18, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba,
	0xe6, 0x96, 0xb0, 0xe7, 0x9a, 0x84, 0xe5, 0xbc, 0x80, 0xe5, 0x9b, 0xa2, 0xe6, 0xa8, 0xa1, 0xe6,
	0x9d, 0xbf, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0xcd,
	0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x6a, 0x92, 0x41, 0x3d, 0x12, 0x0c, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6,
	0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x1a, 0x1b, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6, 0x8c, 0x87,
	0xe5, 0xae, 0x9a, 0xe7, 0x9a, 0x84, 0xe5, 0xbc, 0x80, 0xe5, 0x9b, 0xa2, 0xe6, 0xa8, 0xa1, 0xe6,
	0x9d, 0xbf, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0xcd,
	0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x6a, 0x92, 0x41, 0x3d, 0x12, 0x0c, 0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9, 0xe6,
	0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x1a, 0x1b, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe5, 0xbc, 0x80,
	0xe5, 0x9b, 0xa2, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe7, 0x9a, 0x84, 0xe4, 0xbf, 0xa1, 0xe6,
	0x81, 0xaf, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0xb8,
	0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a, 0x92,
	0x41, 0x48, 0x12, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe5, 0xbc, 0x80, 0xe5, 0x9b, 0xa2,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x1a, 0x20, 0xe6, 0xa0, 0xb9, 0xe6, 0x8d, 0xae, 0xe5, 0xbc,
	0x80, 0xe5, 0x9b, 0xa2, 0x49, 0x44, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe5, 0xbc, 0x80, 0xe5,
	0x9b, 0xa2, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x42, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61,
	0x6d, 0x2f, 0x67, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0xcc, 0x01, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x69,
	0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78,
	0x92, 0x41, 0x54, 0x12, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6, 0x89, 0x80, 0xe6, 0x9c,
	0x89, 0xe5, 0xbc, 0x80, 0xe5, 0x9b, 0xa2, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x1a, 0x26, 0xe6,
	0xa0, 0xb9, 0xe6, 0x8d, 0xae, 0xe7, 0xbe, 0xa4, 0xe7, 0xbb, 0x84, 0x49, 0x44, 0xe8, 0x8e, 0xb7,
	0xe5, 0x8f, 0x96, 0xe6, 0x89, 0x80, 0xe6, 0x9c, 0x89, 0xe5, 0xbc, 0x80, 0xe5, 0x9b, 0xa2, 0xe4,
	0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a,
	0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0xcc, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58,
	0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x72, 0x92, 0x41, 0x48, 0x12, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96,
	0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x1a, 0x20, 0xe6, 0xa0,
	0xb9, 0xe6, 0x8d, 0xae, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0xe8, 0x8e, 0xb7, 0xe5,
	0x8f, 0x96, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x62, 0x10,
	0x0a, 0x0e, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0xe1, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01, 0x92, 0x41, 0x54, 0x12, 0x18,
	0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6, 0x89, 0x80, 0xe6, 0x9c, 0x89, 0xe6, 0xa8, 0xa1, 0xe6,
	0x9d, 0xbf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x1a, 0x26, 0xe6, 0xa0, 0xb9, 0xe6, 0x8d, 0xae,
	0xe7, 0xbe, 0xa4, 0xe7, 0xbb, 0x84, 0x49, 0x44, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6, 0x89,
	0x80, 0xe6, 0x9c, 0x89, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf,
	0x62, 0x10, 0x0a, 0x0e, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0xc7, 0x01, 0x92, 0x41,
	0xa6, 0x01, 0x12, 0x1d, 0x0a, 0x16, 0x78, 0x69, 0x61, 0x6f, 0x79, 0x61, 0x6e, 0x67, 0x20, 0x74,
	0x65, 0x61, 0x6d, 0x20, 0x61, 0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73, 0x32, 0x03, 0x31, 0x2e,
	0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38,
	0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x4d, 0x0a, 0x4b, 0x0a, 0x0a, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x3d, 0x08, 0x02, 0x12, 0x28, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x20, 0x61, 0x20, 0x22, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79,
	0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x20, 0x74,
	0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x5a, 0x1b, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61,
	0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x59, 0x61, 0x6e, 0x67, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_XiaoYang_v1_team_proto_rawDescOnce sync.Once
	file_api_XiaoYang_v1_team_proto_rawDescData = file_api_XiaoYang_v1_team_proto_rawDesc
)

func file_api_XiaoYang_v1_team_proto_rawDescGZIP() []byte {
	file_api_XiaoYang_v1_team_proto_rawDescOnce.Do(func() {
		file_api_XiaoYang_v1_team_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_XiaoYang_v1_team_proto_rawDescData)
	})
	return file_api_XiaoYang_v1_team_proto_rawDescData
}

var file_api_XiaoYang_v1_team_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_XiaoYang_v1_team_proto_goTypes = []any{
	(*CreateTeamRequest)(nil),      // 0: api.XiaoYang.v1.CreateTeamRequest
	(*CreateTeamResponse)(nil),     // 1: api.XiaoYang.v1.CreateTeamResponse
	(*CloseTeamRequest)(nil),       // 2: api.XiaoYang.v1.CloseTeamRequest
	(*CloseTeamResponse)(nil),      // 3: api.XiaoYang.v1.CloseTeamResponse
	(*UpdateTeamRequest)(nil),      // 4: api.XiaoYang.v1.UpdateTeamRequest
	(*UpdateTeamResponse)(nil),     // 5: api.XiaoYang.v1.UpdateTeamResponse
	(*CreateTemplateRequest)(nil),  // 6: api.XiaoYang.v1.CreateTemplateRequest
	(*CreateTemplateResponse)(nil), // 7: api.XiaoYang.v1.CreateTemplateResponse
	(*DeleteTemplateRequest)(nil),  // 8: api.XiaoYang.v1.DeleteTemplateRequest
	(*DeleteTemplateResponse)(nil), // 9: api.XiaoYang.v1.DeleteTemplateResponse
	(*UpdateTemplateRequest)(nil),  // 10: api.XiaoYang.v1.UpdateTemplateRequest
	(*UpdateTemplateResponse)(nil), // 11: api.XiaoYang.v1.UpdateTemplateResponse
	(*GetTeamRequest)(nil),         // 12: api.XiaoYang.v1.GetTeamRequest
	(*GetTeamResponse)(nil),        // 13: api.XiaoYang.v1.GetTeamResponse
	(*ListTeamsRequest)(nil),       // 14: api.XiaoYang.v1.ListTeamsRequest
	(*ListTeamsResponse)(nil),      // 15: api.XiaoYang.v1.ListTeamsResponse
	(*GetTemplateRequest)(nil),     // 16: api.XiaoYang.v1.GetTemplateRequest
	(*GetTemplateResponse)(nil),    // 17: api.XiaoYang.v1.GetTemplateResponse
	(*ListTemplatesRequest)(nil),   // 18: api.XiaoYang.v1.ListTemplatesRequest
	(*ListTemplatesResponse)(nil),  // 19: api.XiaoYang.v1.ListTemplatesResponse
	(*TeamInfo)(nil),               // 20: api.XiaoYang.v1.TeamInfo
	(*TemplateInfo)(nil),           // 21: api.XiaoYang.v1.TemplateInfo
}
var file_api_XiaoYang_v1_team_proto_depIdxs = []int32{
	20, // 0: api.XiaoYang.v1.GetTeamResponse.teamInfo:type_name -> api.XiaoYang.v1.TeamInfo
	20, // 1: api.XiaoYang.v1.ListTeamsResponse.teams:type_name -> api.XiaoYang.v1.TeamInfo
	21, // 2: api.XiaoYang.v1.GetTemplateResponse.templateInfo:type_name -> api.XiaoYang.v1.TemplateInfo
	21, // 3: api.XiaoYang.v1.ListTemplatesResponse.templates:type_name -> api.XiaoYang.v1.TemplateInfo
	0,  // 4: api.XiaoYang.v1.TeamService.CreateTeam:input_type -> api.XiaoYang.v1.CreateTeamRequest
	2,  // 5: api.XiaoYang.v1.TeamService.CloseTeam:input_type -> api.XiaoYang.v1.CloseTeamRequest
	4,  // 6: api.XiaoYang.v1.TeamService.UpdateTeam:input_type -> api.XiaoYang.v1.UpdateTeamRequest
	6,  // 7: api.XiaoYang.v1.TeamService.CreateTemplate:input_type -> api.XiaoYang.v1.CreateTemplateRequest
	8,  // 8: api.XiaoYang.v1.TeamService.DeleteTemplate:input_type -> api.XiaoYang.v1.DeleteTemplateRequest
	10, // 9: api.XiaoYang.v1.TeamService.UpdateTemplate:input_type -> api.XiaoYang.v1.UpdateTemplateRequest
	12, // 10: api.XiaoYang.v1.TeamService.GetTeam:input_type -> api.XiaoYang.v1.GetTeamRequest
	14, // 11: api.XiaoYang.v1.TeamService.ListTeams:input_type -> api.XiaoYang.v1.ListTeamsRequest
	16, // 12: api.XiaoYang.v1.TeamService.GetTemplate:input_type -> api.XiaoYang.v1.GetTemplateRequest
	18, // 13: api.XiaoYang.v1.TeamService.ListTemplates:input_type -> api.XiaoYang.v1.ListTemplatesRequest
	1,  // 14: api.XiaoYang.v1.TeamService.CreateTeam:output_type -> api.XiaoYang.v1.CreateTeamResponse
	3,  // 15: api.XiaoYang.v1.TeamService.CloseTeam:output_type -> api.XiaoYang.v1.CloseTeamResponse
	5,  // 16: api.XiaoYang.v1.TeamService.UpdateTeam:output_type -> api.XiaoYang.v1.UpdateTeamResponse
	7,  // 17: api.XiaoYang.v1.TeamService.CreateTemplate:output_type -> api.XiaoYang.v1.CreateTemplateResponse
	9,  // 18: api.XiaoYang.v1.TeamService.DeleteTemplate:output_type -> api.XiaoYang.v1.DeleteTemplateResponse
	11, // 19: api.XiaoYang.v1.TeamService.UpdateTemplate:output_type -> api.XiaoYang.v1.UpdateTemplateResponse
	13, // 20: api.XiaoYang.v1.TeamService.GetTeam:output_type -> api.XiaoYang.v1.GetTeamResponse
	15, // 21: api.XiaoYang.v1.TeamService.ListTeams:output_type -> api.XiaoYang.v1.ListTeamsResponse
	17, // 22: api.XiaoYang.v1.TeamService.GetTemplate:output_type -> api.XiaoYang.v1.GetTemplateResponse
	19, // 23: api.XiaoYang.v1.TeamService.ListTemplates:output_type -> api.XiaoYang.v1.ListTemplatesResponse
	14, // [14:24] is the sub-list for method output_type
	4,  // [4:14] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_XiaoYang_v1_team_proto_init() }
func file_api_XiaoYang_v1_team_proto_init() {
	if File_api_XiaoYang_v1_team_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_XiaoYang_v1_team_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CloseTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CloseTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ListTeamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ListTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ListTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ListTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*TeamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_XiaoYang_v1_team_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*TemplateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_XiaoYang_v1_team_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_XiaoYang_v1_team_proto_goTypes,
		DependencyIndexes: file_api_XiaoYang_v1_team_proto_depIdxs,
		MessageInfos:      file_api_XiaoYang_v1_team_proto_msgTypes,
	}.Build()
	File_api_XiaoYang_v1_team_proto = out.File
	file_api_XiaoYang_v1_team_proto_rawDesc = nil
	file_api_XiaoYang_v1_team_proto_goTypes = nil
	file_api_XiaoYang_v1_team_proto_depIdxs = nil
}
