// code generated by https://github.com/go-dev-frame/sponge

package config

import (
	"github.com/go-dev-frame/sponge/pkg/conf"
)

var config *Config

func Init(configFile string, fs ...func()) error {
	config = &Config{}
	return conf.Parse(configFile, config, fs...)
}

func Show(hiddenFields ...string) string {
	return conf.Show(config, hiddenFields...)
}

func Get() *Config {
	if config == nil {
		panic("config is nil, please call config.Init() first")
	}
	return config
}

func Set(conf *Config) {
	config = conf
}

type Config struct {
	App      App      `yaml:"app" json:"app"`
	Database Database `yaml:"database" json:"database"`
	HTTP     HTTP     `yaml:"http" json:"http"`
	Jaeger   Jaeger   `yaml:"jaeger" json:"jaeger"`
	Logger   Logger   `yaml:"logger" json:"logger"`
	Redis    Redis    `yaml:"redis" json:"redis"`
}

type Jaeger struct {
	AgentHost string `yaml:"agentHost" json:"agentHost"`
	AgentPort int    `yaml:"agentPort" json:"agentPort"`
}

type App struct {
	CacheType            string  `yaml:"cacheType" json:"cacheType"`
	EnableCircuitBreaker bool    `yaml:"enableCircuitBreaker" json:"enableCircuitBreaker"`
	EnableHTTPProfile    bool    `yaml:"enableHTTPProfile" json:"enableHTTPProfile"`
	EnableLimit          bool    `yaml:"enableLimit" json:"enableLimit"`
	EnableMetrics        bool    `yaml:"enableMetrics" json:"enableMetrics"`
	EnableStat           bool    `yaml:"enableStat" json:"enableStat"`
	EnableTrace          bool    `yaml:"enableTrace" json:"enableTrace"`
	Env                  string  `yaml:"env" json:"env"`
	Host                 string  `yaml:"host" json:"host"`
	Name                 string  `yaml:"name" json:"name"`
	TracingSamplingRate  float64 `yaml:"tracingSamplingRate" json:"tracingSamplingRate"`
	Version              string  `yaml:"version" json:"version"`
}

type Postgres struct {
	ConnMaxLifetime int    `yaml:"connMaxLifetime" json:"connMaxLifetime"`
	Dsn             string `yaml:"dsn" json:"dsn"`
	EnableLog       bool   `yaml:"enableLog" json:"enableLog"`
	MaxIdleConns    int    `yaml:"maxIdleConns" json:"maxIdleConns"`
	MaxOpenConns    int    `yaml:"maxOpenConns" json:"maxOpenConns"`
}

type Redis struct {
	DialTimeout  int    `yaml:"dialTimeout" json:"dialTimeout"`
	Dsn          string `yaml:"dsn" json:"dsn"`
	ReadTimeout  int    `yaml:"readTimeout" json:"readTimeout"`
	WriteTimeout int    `yaml:"writeTimeout" json:"writeTimeout"`
}

type Database struct {
	Driver   string   `yaml:"driver" json:"driver"`
	Postgres Postgres `yaml:"postgres" json:"postgres"`
}

type Logger struct {
	Format        string      `yaml:"format" json:"format"`
	IsSave        bool        `yaml:"isSave" json:"isSave"`
	Level         string      `yaml:"level" json:"level"`
	LogFileConfig interface{} `yaml:"logFileConfig" json:"logFileConfig"`
}

type HTTP struct {
	Port    int `yaml:"port" json:"port"`
	Timeout int `yaml:"timeout" json:"timeout"`
}
