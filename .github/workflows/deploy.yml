name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build-client:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v2
      - name: 检查 client 目录或 CI 配置是否有改动
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            client:
              - "client/**"
              - ".github/workflows/**"
      - name: 设置 Docker Buildx
        if: steps.changes.outputs.client == 'true'
        uses: docker/setup-buildx-action@v1
      - name: 登录 Docker Hub
        if: steps.changes.outputs.client == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: 构建并推送客户端 Docker 镜像
        if: steps.changes.outputs.client == 'true'
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/xiaoyang-client:latest ./client
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/xiaoyang-client:latest

  build-server:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v2
      - name: 检查 XiaoYang 目录或 CI 配置是否有改动
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            server:
              - "XiaoYang/**"
              - ".github/workflows/**"
      - name: 设置 Docker Buildx
        if: steps.changes.outputs.server == 'true'
        uses: docker/setup-buildx-action@v1
      - name: 登录 Docker Hub
        if: steps.changes.outputs.server == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: 构建并推送服务端 Docker 镜像
        if: steps.changes.outputs.server == 'true'
        run: |
          cd XiaoYang
          make image-build2 REPO_HOST=${{ secrets.DOCKERHUB_USERNAME }} 
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/xiaoyang-server:latest

  build-bot:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v2
      - name: 检查 bot 目录或 CI 配置是否有改动
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            bot:
              - "bot/**"
              - ".github/workflows/**"
      - name: 设置 Docker Buildx
        if: steps.changes.outputs.bot == 'true'
        uses: docker/setup-buildx-action@v1
      - name: 登录 Docker Hub
        if: steps.changes.outputs.bot == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: 构建并推送 Bot Docker 镜像
        if: steps.changes.outputs.bot == 'true'
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/xiaoyang-bot:latest ./bot
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/xiaoyang-bot:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-client, build-server, build-bot]
    steps:
      - name: 检出代码
        uses: actions/checkout@v2
      - name: 拷贝 docker-compose.yml 到服务器
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./docker-compose.yml"
          target: "/home/${{ secrets.SSH_USER }}/zyhm/"
      - name: 部署到服务器
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.SSH_USER }}/zyhm
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/xiaoyang-client:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/xiaoyang-server:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/xiaoyang-bot:latest
            docker-compose down
            docker-compose up -d
